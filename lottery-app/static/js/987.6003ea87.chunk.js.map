{"version":3,"file":"static/js/987.6003ea87.chunk.js","mappings":"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","sources":["components/Slider.js","page/SearchLottery.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport \"./Slider.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst breakPoints = [\r\n  { width: 1, itemsToShow: 1 },\r\n  { width: 550, itemsToShow: 2, itemsToScroll: 2 },\r\n  { width: 768, itemsToShow: 3 },\r\n];\r\n\r\nfunction Slider({ items }) {\r\n  // const [items, setItems] = useState([1, 2, 3, 4, 5, 6, 7, 8]);\r\n\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div>\r\n\r\n      <hr className=\"seperator\" />\r\n      <div className=\"carousel-wrapper\">\r\n        <Carousel breakPoints={breakPoints} pagination={false} infinite={true} itemPadding={[10, 10, 10, 10]} >\r\n          {items.map((lottery) => (\r\n            <div className=\"item cursor-pointer\" onClick={() => { navigate(`/purchase/${lottery.number}`) }}>\r\n              <img className = \"border rounded-lg shadow-md\" src={lottery.pic} alt={`Lottery ${lottery.number}`} />\r\n              <div className=\"text-m\">{lottery.number}</div>\r\n              <div className=\"text-s\">{`Quantity: ${lottery.quantity}`}</div>\r\n            </div>\r\n          ))}\r\n        </Carousel>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Slider from \"../components/Slider\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { db } from \"../firebase/Firebase\";\r\nimport { collection, getDocs, addDoc, setDoc, doc } from \"firebase/firestore\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport LoadingScreen from \"../components/Loading\"\r\n\r\nexport default function SearchLottery() {\r\n  const [digits, setDigits] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [originalLotteries, setOriginalLotteries] = useState([]);\r\n  const [lotteries, setLotteries] = useState([]);\r\n  const [isTwoLast, setIsTwoLast] = useState([]);\r\n  const [isThreeLast, setIsThreeLast] = useState([]);\r\n  const [isThreeFirst, setIsThreeFirst] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const navigate = useNavigate()\r\n\r\n  const lotteriesCollectionRef = collection(db, \"lotteries\");\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const fetchLotteries = async () => {\r\n      const lotteriesArray = await getDocs(lotteriesCollectionRef);\r\n      const lotteriesData = lotteriesArray.docs.map((doc) => doc.data());\r\n\r\n      setOriginalLotteries(lotteriesData.filter((lottery) => lottery.quantity > 0));\r\n      setIsTwoLast(lotteriesData.filter((lottery) => lottery.isTwoLast && lottery.quantity > 0));\r\n      setIsThreeLast(lotteriesData.filter((lottery) => lottery.isThreeLast && lottery.quantity > 0));\r\n      setIsThreeFirst(lotteriesData.filter((lottery) => lottery.isThreeFirst && lottery.quantity > 0));\r\n\r\n      setLoading(false)\r\n\r\n    };\r\n    fetchLotteries();\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (originalLotteries.length > 0) {\r\n      const filteredLotteries = originalLotteries.filter((lottery) =>\r\n        digitIsPresent(lottery, digits)\r\n      );\r\n      setLotteries(filteredLotteries);\r\n    }\r\n  }, [digits, originalLotteries]);\r\n\r\n  function digitIsPresent(lottery, digits) {\r\n    const number = lottery.number.split(\"\");\r\n    // console.log(number, digits);\r\n    for (let i = 0; i < digits.length; i++) {\r\n      if (number[i] !== digits[i] && digits[i] !== \"\") {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function handleChange(event, index) {\r\n    const value = event.target.value;\r\n\r\n    setDigits((prevDigits) => {\r\n      const newDigits = [...prevDigits];\r\n      newDigits[index] = value;\r\n      // console.log(newDigits);\r\n      return newDigits;\r\n    });\r\n  }\r\n\r\n\r\n\r\n  const myArray = [isTwoLast, isThreeLast, isThreeFirst];\r\n  // console.log(\"items it is\", myArray);\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"h-full bg-gradient-to-br from-sky-50 to-gray-200\">\r\n\r\n      {\r\n        (isLoading) ? (\r\n          <LoadingScreen />\r\n        ) : (\r\n          <>\r\n            <Header />\r\n            <div className=\"mt-28 justify-center flex \">\r\n              {/* <label>Enter your lottery numbers:</label> */}\r\n\r\n              {digits.map((digit, index) => (\r\n                <div className=\"mx-1\">\r\n                  <TextField\r\n                    type=\"tel\"\r\n                    key={index}\r\n                    maxLength={1}\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    onChange={(event) => handleChange(event, index)}\r\n                    className=\"rounded w-10 mr-5\"\r\n                    onKeyPress={(event) => {\r\n                      const newQuantity = (event.target.value + event.key).length;\r\n                      if (newQuantity > 1 || isNaN(event.key)) {\r\n                        event.preventDefault();\r\n                      }\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              {/* <p>You entered: {digits.join(\" \")}</p> */}\r\n            </div>\r\n\r\n            {digits.every((digit) => digit == \"\") ? (\r\n              <>\r\n                <div className=\"text-2xl font-bold text-center mt-10\">\r\n                  เลขท้าย 2 ตัวมาแรง\r\n                </div>\r\n                <Slider items={isTwoLast} />\r\n\r\n                <div className=\"text-2xl font-bold text-center mt-10\">\r\n                  เลขท้าย 3 ตัวมาแรง\r\n                </div>\r\n                <Slider items={isThreeLast} />\r\n\r\n                <div className=\"text-2xl font-bold text-center mt-10\">\r\n                  เลขหน้า 3 ตัวมาแรง\r\n                </div>\r\n                <Slider items={isThreeFirst} />\r\n              </>\r\n            ) : lotteries.length > 0 ? (\r\n              <>\r\n                <div class=\"py-4\"></div>\r\n                <div className=\"text-2xl font-bold text-center mt-2\">Search</div>\r\n\r\n\r\n                <div className=\"md:px-60\">\r\n                  <div className=\"flex flex-wrap justify-center w-full\">\r\n                    {lotteries.map((lottery) => (\r\n                      <div className=\"sm:w-1/4 py-2 border rounded-lg mx-2 my-2 px-2 py-2 shadow-md cursor-pointer \" onClick={() => { navigate(`/purchase/${lottery.number}`) }}>\r\n                        <img src={lottery.pic} className=\"w-80 max-h-100 max-w-100 mx-auto border rounded-lg shadow-md\"></img>\r\n                        <div className=\"text-m sm:text-l md:text-xl font-bold text-center my-2 bg-white\">\r\n                          {lottery.number}\r\n                        </div>\r\n                        <div className=\"text-s sm:text-m md:text-l font-bold text-center bg-white\">\r\n                          Quantity: {lottery.quantity}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div class=\"py-4\"></div>\r\n                <div className=\"text-2xl font-bold text-center mt-10\">\r\n                  No lottery found\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n\r\n\r\n\r\n            <div className=\"text-center hover:font-bold hover:underline my-5 text-base\">\r\n              <Link\r\n                to={{\r\n                  pathname: \"/all\",\r\n                  state: { myArray: myArray },\r\n                }}\r\n              >\r\n                ดูทั้งหมด\r\n              </Link>\r\n            </div>\r\n\r\n\r\n          </>\r\n        )\r\n      }\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n"],"names":["breakPoints","width","itemsToShow","itemsToScroll","items","navigate","useNavigate","className","pagination","infinite","itemPadding","map","lottery","onClick","number","src","pic","alt","quantity","SearchLottery","useState","digits","setDigits","originalLotteries","setOriginalLotteries","lotteries","setLotteries","isTwoLast","setIsTwoLast","isThreeLast","setIsThreeLast","isThreeFirst","setIsThreeFirst","isLoading","setLoading","lotteriesCollectionRef","collection","db","useEffect","fetchLotteries","getDocs","lotteriesArray","lotteriesData","docs","doc","data","filter","length","filteredLotteries","split","i","digitIsPresent","myArray","Loading","Header","digit","index","TextField","type","maxLength","id","variant","onChange","event","value","target","prevDigits","newDigits","handleChange","onKeyPress","key","isNaN","preventDefault","autoComplete","every","class","to","pathname","state"],"sourceRoot":""}